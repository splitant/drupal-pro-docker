#!/bin/bash

# Get .env vars.
export $(grep -v '^#' "../.env" | xargs)

PHP_CONTAINER_ID=$(docker ps --filter name="^/${PROJECT_NAME}_drupal" --format "{{ .ID }}")
PHP_CONTAINER_EXEC="docker exec ${PHP_CONTAINER_ID} php"

# Variables
PROJECT_DIR=$(${PHP_CONTAINER_EXEC} -r "echo dirname(dirname(dirname(realpath('$0'))));")
DIFF_FILES=$(git diff --cached --name-only --diff-filter=ACMR HEAD web)

# ERROR FLAGS
ERROR_DUMP=0
ERROR_PARSE=0
ERROR_PHP_CS=0

# COLORS
GREEN='\e[0;32m'
BROWN='\e[0;33m'
RED='\e[0;31m'
CYAN='\e[96m'
NC='\e[0m'

FILES=''
echo -e "${GREEN}Checking PHP ${BROWN}dpm ${GREEN}and ${BROWN}lint${GREEN}...${NC}"
for FILE in $DIFF_FILES; do
    DIFF=$(git diff --cached --diff-filter ACMR $FILE|grep -e '+.*dpm')
    if [ ! -z "$DIFF" ]; then
        FILES="${FILES}\n\t$FILE"
        ERROR_DUMP=1
    fi
    ${PHP_CONTAINER_EXEC} -l -d display_errors=0 $PROJECT_DIR/$FILE
    if [ $? != 0 ]; then
        ERROR_PARSE=1
    fi
done
if [ $ERROR_PARSE != 0 ]; then
    echo -e "${RED}Fix parsing errors before commit.${NC}"
fi
if [ $ERROR_DUMP != 0 ]; then
    echo -e "${RED}Remove dpm statement in following files before commit.${NC}$FILES"
fi

FILES=''
echo -e "${GREEN}Checking ${GREEN}PHP code quality...${NC}"
for FILE in $DIFF_FILES; do
    FILES="$FILES $FILE"
done

FILES=$(echo $FILES | xargs)

if [ ! -z "$FILES" ]; then
   ${PHP_CONTAINER_EXEC} ./vendor/bin/phpcs --standard=Drupal,DrupalPractice --extensions=inc,info,install,module,php,profile,test,theme --ignore=**/node_modules/,web/themes/custom/*/assets $FILES
    if [ $? != 0 ]; then
    	echo -e "Coding standards errors have been detected. Running phpcbf..."
    	${PHP_CONTAINER_EXEC} ./vendor/bin/phpcbf --standard=Drupal,DrupalPractice --extensions=inc,info,install,module,php,profile,test,theme --ignore=**/node_modules/,web/themes/custom/*/assets $FILES
    	git add $FILES
    	echo "Running Code Sniffer again..."
    	${PHP_CONTAINER_EXEC} ./vendor/bin/phpcs --standard=Drupal,DrupalPractice --extensions=inc,info,install,module,php,profile,test,theme --ignore=**/node_modules/,web/themes/custom/*/assets $FILES
    	if [ $? != 0 ]; then
            echo "[PHPCS] Errors found not fixable automatically"
            ERROR_PHP_QLTY=1
        fi
    fi
    
    # ${PHP_CONTAINER_EXEC} ./vendor/bin/phpmd "${FILES// /,}" ansi phpmd-ruleset.xml --exclude node_modules --suffixes inc,info,install,module,php,profile,test,theme
    # if [ $? != 0 ]; then
    #     echo "[PHPMD] Errors found"
    #     ERROR_PHP_QLTY=1
    # fi

    # ${PHP_CONTAINER_EXEC} ./vendor/bin/phpstan analyze --memory-limit=-1 $FILES
    # if [ $? != 0 ]; then
    #     echo "[PHPSTAN] Errors found"
    #     ERROR_PHP_QLTY=1
    # fi

    # ${PHP_CONTAINER_EXEC} ./vendor/bin/rector process --dry-run
    # if [ $? != 0 ]; then
    #     echo "[RECTOR PHP] Errors found"
    #     ERROR_PHP_QLTY=1
    # fi
fi

if [ $ERROR_PHP_QLTY != 0 ]; then
    echo -e "${RED}Fix the php code quality error(s) before commit.${NC}"
fi


# Display message and exit status
! (( $ERROR_DUMP || $ERROR_PARSE || $ERROR_PHP_CS ))
ERRORS=$?
[ $ERRORS == 0 ] && echo -e "${CYAN}You can commit your job!${NC}"
[ $ERRORS != 0 ] && echo -e "${RED}Fix the errors before commit!${NC}"

exit $ERRORS

